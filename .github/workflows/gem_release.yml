name: Gem Release Workflow

on:
  workflow_call:
    inputs:
      working_directory:
        description: 'The directory to run the workflow in (useful for monorepos).'
        required: false
        type: string
        default: "."
      release_prefix:
        description: 'A prefix for the GitHub release and tag, e.g. "widgets" would result in a tag named "widgets-v0.0.1" (useful for monorepos).'
        required: false
        type: string
        default: ""
      force:
        description: 'Force a release to run regardless of version change'
        required: true
        type: boolean
        default: false

jobs:
  release:
    defaults:
      run:
        working-directory: ${{inputs.working_directory}}

    runs-on: ubuntu-latest

    steps:
      - name: ðŸ“š Git Checkout
        uses: actions/checkout@v3

      - name: Check Gem modified
        uses: technote-space/get-diff-action@v6
        id: gem_change
        with:
          PATTERNS: lib/**/version.rb

      - name: ðŸ’Ž Setup Ruby
        if: ${{ inputs.force || steps.gem_change.outputs.diff }}
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: âœ¨ Build & Release Gem
        if: ${{ inputs.force || steps.gem_change.outputs.diff }}
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:github: Bearer ${GITHUB_TOKEN}\n" > $HOME/.gem/credentials
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          bundle config https://rubygems.pkg.github.com/$GITHUB_REPOSITORY_OWNER Bearer $GITHUB_TOKEN
          bundle config set gem.push_key github
          bundle exec rake release
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GEM_RELEASE_PREFIX: ${{inputs.release_prefix}}

      - name: ðŸ”Ž Create GitHub Release
        if: ${{ inputs.force || steps.gem_change.outputs.diff }}
        run: |
          RELEASE_NAME="$(ruby -e 'puts [ENV.fetch("GEM_RELEASE_PREFIX", ""), "v#{Gem::Specification.load(Dir.glob("*.gemspec").first).version}"].select {|s| s != ""}.join("-")')"
          gh release create "$RELEASE_NAME" pkg/* --generate-notes
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GEM_RELEASE_PREFIX: ${{inputs.release_prefix}}
